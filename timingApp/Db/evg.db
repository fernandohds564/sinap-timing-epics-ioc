########################################################################
# Control and Status Register [0]

record(mbbiDirect, "$(device):seqen_enable") {
# field(ASG, "Reserved")
  field(DESC, "EVG seqen and enable status")
  field(NOBT, "8")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evg_ctrl_seqen_enable_intr $(PORT)")
  field(FLNK, "$(device):enableRBV")
}

record(bi, "$(device):enableRBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG enable status")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(INP, "$(device):seqen_enable.B0")
  field(FLNK, "$(device):seqenRBV")
}

record(bi, "$(device):seqenRBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG SEQRAM enable status")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(INP, "$(device):seqen_enable.B1")
}

record(mbbiDirect, "$(device):seqstat_rfstat") {
# field(ASG, "Reserved")
  field(DESC, "EVG SEQRAM and RF input status")
  field(NOBT, "6")
  field(SHFT, "3")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evg_ctrl_seqstat_rfstat_intr $(PORT)")
  field(FLNK, "$(device):rfstat")
}

record(bi, "$(device):rfstat") {
# field(ASG, "Reserved")
  field(DESC, "EVG RF input status")
  field(ZNAM, "LOSS OR OUT OF RANGE")
  field(ONAM, "NORMAL")
  field(INP, "$(device):seqstat_rfstat.B2")
  field(FLNK, "$(device):seqstatCalc")
}

record(calc, "$(device):seqstatCalc") {
# field(ASG, "Reserved")
  field(DESC, "EVG SEQRAM status calculation")
  field(INPA, "$(device):seqstat_rfstat")
  field(CALC, "A&3")
  field(FLNK, "$(device):seqstat")
}

record(mbbi, "$(device):seqstat") {
# field(ASG, "Reserved")
  field(DESC, "EVG SEQRAM status")
  field(INP, "$(device):seqstatCalc")
  field(ZRVL, "0")
  field(ZRST, "Stopped")
  field(ONVL, "1")
  field(ONST, "SEQRAM 1")
  field(TWVL, "2")
  field(TWST, "SEQRAM 2")
}

record(calcout, "$(device):SEQEN_ENABLE") {
# field(ASG, "Reserved")
  field(DESC, "EVG download SEQEN and ENABLE")
  field(PINI, "1")
  field(INPA, "$(device):seqen")
  field(INPB, "$(device):enable")
  field(CALC, "(A<<1)|B")
}

record(calcout, "$(device):SEQEN") {
# field(ASG, "Reserved")
  field(DESC, "EVG SEQRAM set enable calc")
  field(DTYP, "stream")
  field(INPA, "$(device):seqen")
  field(INPB, "$(device):enableRBV")
  field(CALC, "(A<<1)|B")
  field(OUT, "@timing.proto evg_ctrl_seq_en_set($(device),SEQEN) $(PORT)")
  field(FLNK, "$(device):SEQEN_ENABLE")
}

record(calcout, "$(device):EVGEN") {
# field(ASG, "Reserved")
  field(DESC, "EVG set enable calc")
  field(DTYP, "stream")
  field(INPA, "$(device):seqenRBV")
  field(INPB, "$(device):enable")
  field(CALC, "(A<<1)|B")
  field(OUT, "@timing.proto evg_ctrl_seq_en_set($(device),EVGEN) $(PORT)")
  field(FLNK, "$(device):SEQEN_ENABLE")
}

record(bo, "$(device):seqen"){
  field(DESC, "Enable/Disable Sequence RAM")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(FLNK, "$(device):SEQEN")
}

record(bo, "$(device):enable"){
  field(DESC, "Enable/Disable EVG")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(FLNK, "$(device):EVGEN")
}

record(longout, "$(device):cmd_evg_ctrl_get") {
# field(ASG, "Reserved")
  field(DESC, "Control Status reg read command code")
  field(VAL, "0x80") # (0x80 | reg number)
  field(SCAN, ".5 second")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evg_ctrl_get($(device)) $(PORT)")
}

record(longout, "$(device):cmd_evg_ctrl_set") {
# field(ASG, "Reserved")
  field(DESC, "Control Status reg write command code")
  field(VAL, "0x40")
}

########################################################################
# AC Line register [40]

record(bi, "$(device):acenRBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG AC line input enable status")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
}

record(longin, "$(device):acdivRAW") {
# field(ASG, "Reserved")
  field(DESC, "EVG AC line RAW frequency divider")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evg_acline_acdivraw_intr $(PORT)")
  field(FLNK, "$(device):acdivRBV")
}

record(calc, "$(device):acdivRBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG AC line frequency divider RBV")
  field(INPA, "$(device):acdivRAW")
  field(CALC, "A+1")
}

record(bo, "$(device):acen"){
  field(DESC, "Enable/Disable AC line input")
  field(DTYP, "stream")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(OUT, "@timing.proto evg_acline_acen_set($(device)) $(PORT)")
}

record(ao, "$(device):acdiv"){
  field(DESC, "EVG AC divider prescaler setting")
  field(DTYP, "stream")
  field(DRVH, "1073741824")
  field(DRVL, "1")
  field(AOFF, "1")
  field(PREC, "0")
  field(OUT, "@timing.proto evg_acline_acdiv_set($(device)) $(PORT)")
}

record(longout, "$(device):cmd_evg_acline_get") {
# field(ASG, "Reserved")
  field(DESC, "AC Line reg read command code")
  field(VAL, "0xA8") # (0x80 | reg number=40)
}

record(longout, "$(device):cmd_evg_acline_set") {
# field(ASG, "Reserved")
  field(DESC, "AC Line reg write command code")
  field(VAL, "0x68")
}

########################################################################
# Mux0 register [41]

record(bi, "$(device):muxen0RBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux0 enable status")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
}

record(longin, "$(device):muxdiv0RAW") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux0 frequency divider RAW")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evg_mux_div0RAW_intr $(PORT)")
  field(FLNK, "$(device):muxdiv0RBV")
}

record(calc, "$(device):muxdiv0RBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux0 frequency divider RBV")
  field(INPA, "$(device):muxdiv0RAW")
  field(CALC, "A+1")
}

record(bo, "$(device):muxen0"){
  field(DESC, "Enable/Disable MUX0")
  field(DTYP, "stream")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(OUT, "@timing.proto evg_mux_en_set($(device),0) $(PORT)")
}

record(ao, "$(device):muxdiv0"){
  field(DESC, "EVG MUX0 prescaler setting")
  field(DTYP, "stream")
  field(DRVH, "1073741824")
  field(DRVL, "1")
  field(AOFF, "1")
  field(PREC, "0")
  field(OUT, "@timing.proto evg_mux_div_set($(device),0) $(PORT)")
}

record(longout, "$(device):cmd_evg_mux_get0") {
# field(ASG, "Reserved")
  field(DESC, "Command code to read Mux0 register")
  field(VAL, "0xA9") # (0x80 | reg number=41)
  #field(ASG, "Reserved")
}

record(longout, "$(device):cmd_evg_mux_set0") {
# field(ASG, "Reserved")
  field(DESC, "Command code to write to Mux0 register")
  field(VAL, "0x69")
  #field(ASG, "Reserved")
}

########################################################################
# Mux1 register [42]

record(bi, "$(device):muxen1RBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux1 enable status")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
}

record(longin, "$(device):muxdiv1RAW") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux1 frequency divider RAW")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evg_mux_div1RAW_intr $(PORT)")
  field(FLNK, "$(device):muxdiv1RBV")
}

record(calc, "$(device):muxdiv1RBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux1 frequency divider RBV")
  field(INPA, "$(device):muxdiv1RAW")
  field(CALC, "A+1")
}

record(bo, "$(device):muxen1"){
  field(DESC, "Enable/Disable MUX1")
  field(DTYP, "stream")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(OUT, "@timing.proto evg_mux_en_set($(device),1) $(PORT)")
}

record(ao, "$(device):muxdiv1"){
  field(DESC, "EVG Mux1 prescaler setting")
  field(DTYP, "stream")
  field(DRVH, "1073741824")
  field(DRVL, "1")
  field(AOFF, "1")
  field(PREC, "0")
  field(OUT, "@timing.proto evg_mux_div_set($(device),1) $(PORT)")
}

record(longout, "$(device):cmd_evg_mux_get1") {
# field(ASG, "Reserved")
  field(DESC, "Command code to read Mux1 register")
  field(VAL, "0xAA") # (0x80 | reg number=42)
}

record(longout, "$(device):cmd_evg_mux_set1") {
# field(ASG, "Reserved")
  field(DESC, "Command code to write to Mux1 register")
  field(VAL, "0x6A")
}

########################################################################
# Mux2 register [43]

record(bi, "$(device):muxen2RBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux2 enable status")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
}

record(longin, "$(device):muxdiv2RAW") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux2 frequency divider RAW")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evg_mux_div2RAW_intr $(PORT)")
  field(FLNK, "$(device):muxdiv2RBV")
}

record(calc, "$(device):muxdiv2RBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux2 frequency divider RBV")
  field(INPA, "$(device):muxdiv2RAW")
  field(CALC, "A+1")
}

record(bo, "$(device):muxen2"){
  field(DESC, "Enable/Disable MUX2")
  field(DTYP, "stream")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(OUT, "@timing.proto evg_mux_en_set($(device),2) $(PORT)")
}

record(ao, "$(device):muxdiv2"){
  field(DESC, "EVG Mux2 prescaler setting")
  field(DTYP, "stream")
  field(DRVH, "1073741824")
  field(DRVL, "1")
  field(AOFF, "1")
  field(PREC, "0")
  field(OUT, "@timing.proto evg_mux_div_set($(device),2) $(PORT)")
}

record(longout, "$(device):cmd_evg_mux_get2") {
# field(ASG, "Reserved")
  field(DESC, "Command code to read Mux2 register")
  field(VAL, "0xAB") # (0x80 | reg number=43)
}

record(longout, "$(device):cmd_evg_mux_set2") {
# field(ASG, "Reserved")
  field(DESC, "Command code to write to Mux2 register")
  field(VAL, "0x6B")
}

########################################################################
# Mux3 register [44]

record(bi, "$(device):muxen3RBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux3 enable status")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
}

record(longin, "$(device):muxdiv3RAW") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux3 frequency divider RAW")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evg_mux_div3RAW_intr $(PORT)")
  field(FLNK, "$(device):muxdiv3RBV")
}

record(calc, "$(device):muxdiv3RBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux3 frequency divider RBV")
  field(INPA, "$(device):muxdiv3RAW")
  field(CALC, "A+1")
}

record(bo, "$(device):muxen3"){
  field(DESC, "Enable/Disable MUX3")
  field(DTYP, "stream")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(OUT, "@timing.proto evg_mux_en_set($(device),3) $(PORT)")
}

record(ao, "$(device):muxdiv3"){
  field(DESC, "EVG Mux3 prescaler setting")
  field(DTYP, "stream")
  field(DRVH, "1073741824")
  field(DRVL, "1")
  field(AOFF, "1")
  field(PREC, "0")
  field(OUT, "@timing.proto evg_mux_div_set($(device),3) $(PORT)")
}

record(longout, "$(device):cmd_evg_mux_get3") {
# field(ASG, "Reserved")
  field(DESC, "Command code to read Mux3 register")
  field(VAL, "0xAC") # (0x80 | reg number=44)
}

record(longout, "$(device):cmd_evg_mux_set3") {
# field(ASG, "Reserved")
  field(DESC, "Command code to write to Mux3 register")
  field(VAL, "0x6C")
}

########################################################################
# Mux4 register [45]

record(bi, "$(device):muxen4RBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux4 enable status")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
}

record(longin, "$(device):muxdiv4RAW") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux4 frequency divider RAW")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evg_mux_div4RAW_intr $(PORT)")
  field(FLNK, "$(device):muxdiv4RBV")
}

record(calc, "$(device):muxdiv4RBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux4 frequency divider RBV")
  field(INPA, "$(device):muxdiv4RAW")
  field(CALC, "A+1")
}

record(bo, "$(device):muxen4"){
  field(DESC, "Enable/Disable MUX4")
  field(DTYP, "stream")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(OUT, "@timing.proto evg_mux_en_set($(device),4) $(PORT)")
}

record(ao, "$(device):muxdiv4"){
  field(DESC, "EVG Mux4 prescaler setting")
  field(DTYP, "stream")
  field(DRVH, "1073741824")
  field(DRVL, "1")
  field(AOFF, "1")
  field(PREC, "0")
  field(OUT, "@timing.proto evg_mux_div_set($(device),4) $(PORT)")
}

record(longout, "$(device):cmd_evg_mux_get4") {
# field(ASG, "Reserved")
  field(DESC, "Command code to read Mux4 register")
  field(VAL, "0xAD") # (0x80 | reg number=45)
}

record(longout, "$(device):cmd_evg_mux_set4") {
# field(ASG, "Reserved")
  field(DESC, "Command code to write to Mux4 register")
  field(VAL, "0x6D")
}

########################################################################
# Mux5 register [46]

record(bi, "$(device):muxen5RBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux5 enable status")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
}

record(longin, "$(device):muxdiv5RAW") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux5 frequency divider RAW")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evg_mux_div5RAW_intr $(PORT)")
  field(FLNK, "$(device):muxdiv5RBV")
}

record(calc, "$(device):muxdiv5RBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux5 frequency divider RBV")
  field(INPA, "$(device):muxdiv5RAW")
  field(CALC, "A+1")
}

record(bo, "$(device):muxen5"){
  field(DESC, "Enable/Disable MUX5")
  field(DTYP, "stream")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(OUT, "@timing.proto evg_mux_en_set($(device),5) $(PORT)")
}

record(ao, "$(device):muxdiv5"){
  field(DESC, "EVG Mux5 prescaler setting")
  field(DTYP, "stream")
  field(DRVH, "1073741824")
  field(DRVL, "1")
  field(AOFF, "1")
  field(PREC, "0")
  field(OUT, "@timing.proto evg_mux_div_set($(device),5) $(PORT)")
}

record(longout, "$(device):cmd_evg_mux_get5") {
# field(ASG, "Reserved")
  field(DESC, "Command code to read Mux5 register")
  field(VAL, "0xAE") # (0x80 | reg number=46)
  #field(ASG, "Reserved")
}

record(longout, "$(device):cmd_evg_mux_set5") {
# field(ASG, "Reserved")
  field(DESC, "Command code to write to Mux5 register")
  field(VAL, "0x6E")
}

########################################################################
# Mux6 register [47]

record(bi, "$(device):muxen6RBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux6 enable status")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
}

record(longin, "$(device):muxdiv6RAW") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux6 frequency divider RAW")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evg_mux_div6RAW_intr $(PORT)")
  field(FLNK, "$(device):muxdiv6RBV")
}

record(calc, "$(device):muxdiv6RBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux6 frequency divider RBV")
  field(INPA, "$(device):muxdiv6RAW")
  field(CALC, "A+1")
}

record(bo, "$(device):muxen6"){
  field(DESC, "Enable/Disable MUX6")
  field(DTYP, "stream")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(OUT, "@timing.proto evg_mux_en_set($(device),6) $(PORT)")
}

record(ao, "$(device):muxdiv6"){
  field(DESC, "EVG Mux6 prescaler setting")
  field(DTYP, "stream")
  field(DRVH, "1073741824")
  field(DRVL, "1")
  field(AOFF, "1")
  field(PREC, "0")
  field(OUT, "@timing.proto evg_mux_div_set($(device),6) $(PORT)")
}

record(longout, "$(device):cmd_evg_mux_get6") {
# field(ASG, "Reserved")
  field(DESC, "Command code to read Mux6 register")
  field(VAL, "0xAF") # (0x80 | reg number=47)
}

record(longout, "$(device):cmd_evg_mux_set6") {
# field(ASG, "Reserved")
  field(DESC, "Command code to write to Mux6 register")
  field(VAL, "0x6F")
}

########################################################################
# Mux7 register [48]

record(bi, "$(device):muxen7RBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux7 enable status")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
}

record(longin, "$(device):muxdiv7RAW") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux7 frequency divider RAW")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evg_mux_div7RAW_intr $(PORT)")
  field(FLNK, "$(device):muxdiv7RBV")
}

record(calc, "$(device):muxdiv7RBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG Mux7 frequency divider RBV")
  field(INPA, "$(device):muxdiv7RAW")
  field(CALC, "A+1")
}

record(bo, "$(device):muxen7"){
  field(DESC, "Enable/Disable MUX7")
  field(DTYP, "stream")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(OUT, "@timing.proto evg_mux_en_set($(device),7) $(PORT)")
}

record(ao, "$(device):muxdiv7"){
  field(DESC, "EVG Mux7 prescaler setting")
  field(DTYP, "stream")
  field(DRVH, "1073741824")
  field(DRVL, "1")
  field(AOFF, "1")
  field(PREC, "0")
  field(OUT, "@timing.proto evg_mux_div_set($(device),7) $(PORT)")
}

record(longout, "$(device):cmd_evg_mux_get7") {
# field(ASG, "Reserved")
  field(DESC, "Command code to read Mux7 register")
  field(VAL, "0xB0") # (0x80 | reg number=48)
}

record(longout, "$(device):cmd_evg_mux_set7") {
# field(ASG, "Reserved")
  field(DESC, "Command code to write to Mux7 register")
  field(VAL, "0x70")
}

########################################################################
# SEQRAM setting register [49]

record(longout, "$(device):seqaddr"){
  field(DESC, "Set address of EVG SEQRAM")
  field(DRVH, "16383")
  field(DRVL, "0")
}

record(longout, "$(device):seqcode"){
  field(DESC, "Set event code in EVG SEQRAM")
  field(DRVH, "255")
  field(DRVL, "0")
}

record(longout, "$(device):seqtime"){
  field(DESC, "Set timestamp in EVG SEQRAM")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evg_seqramset_set($(device)) $(PORT)")
}

record(longout, "$(device):cmd_evg_seqramset_set") {
# field(ASG, "Reserved")
  field(DESC, "SEQRAM setting reg write command code")
  field(VAL, "0x71")
}

########################################################################
# SEQRAM switch register [50]

record(mbbiDirect, "$(device):seqcountRBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG seqcount status")
  field(NOBT, "14")
  field(DTYP, "stream")
  field(INP, "@timing.proto evg_seqramsw_get($(device)) $(PORT)")
}

record(longout, "$(device):seqram_switch"){
  field(DESC, "Switch SEQRAM")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evg_seqramsw_set($(device)) $(PORT)")
}

record(longout, "$(device):cmd_evg_seqramsw_get") {
# field(ASG, "Reserved")
  field(DESC, "SEQRAM switch reg read command code")
  field(VAL, "0xB2") # (0x80 | reg number=50)
}

record(longout, "$(device):cmd_evg_seqramsw_set") {
# field(ASG, "Reserved")
  field(DESC, "SEQRAM switch reg write command code")
  field(VAL, "0x72")
}

########################################################################
# Timestamp register [51]

# Note: Setting $(device):UTC.VAL to 0 causes EVG to broadcast
# 	the timestamp to the EVEs and EVRs.

record(longout, "$(device):UTC"){
  field(DESC, "EVG timestamp UTC field")
  field(EGU, "seconds")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evg_timestamp_utc_set($(device)) $(PORT)")
}

record(mbbo, "$(device):TIMESRC"){
  field(DESC, "EVG timestamp signal source")	
  field(ZRST, "IDLE")
  field(ZRVL, "0")
  field(ONST, "DBUS")
  field(ONVL, "1")
  field(TWST, "EXTERNAL")
  field(TWVL, "2")
  field(THST, "INTERNAL")
  field(THVL, "3")
  field(VAL, "0")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evg_timestamp_timesrc_set($(device)) $(PORT)")
}

record(longin, "$(device):UTCRBV"){
# field(ASG, "Reserved")
  field(DESC, "EVG timestamp UTC field RBV")
  field(EGU, "seconds")
}

record(longin, "$(device):subsecondRBV"){
# field(ASG, "Reserved")
  field(DESC, "EVG timestamp subsecond field RBV")
  field(EGU, "evt_T")
}

record(mbbi, "$(device):TIMESRCRBV"){
# field(ASG, "Reserved")
  field(DESC, "EVG timestamp signal source RBV")	
  field(ZRST, "IDLE")
  field(ZRVL, "0")
  field(ONST, "DBUS")
  field(ONVL, "1")
  field(TWST, "EXTERNAL")
  field(TWVL, "2")
  field(THST, "INTERNAL")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evg_timestamp_timesrcRBV_intr $(PORT)")
}

record(longout, "$(device):cmd_evg_timestamp_get"){
# field(ASG, "Reserved")
  field(DESC, "Timestamp reg read command code")
  field(VAL, "0xB3")
  field(SCAN, "1 second")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evg_timestamp_get($(device)) $(PORT)")
}

record(longout, "$(device):cmd_evg_timestamp_set"){
# field(ASG, "Reserved")
  field(DESC, "Timestamp reg write command code")
  field(VAL, "0x73")
}

########################################################################
# Firmware Version [62]

record(stringin, "$(device):FRMVERSION"){
  field(DESC, "EVG firmware version")
  field(DTYP, "stream")
  field(INP, "@timing.proto evg_frmversion_get($(device)) $(PORT)")
}

record(calcout, "$(device):cmd_evg_frmversion_get"){
# field(ASG, "Reserved")
  field(DESC, "Firmware version read command code")
  field(VAL, "0xBE")
}

########################################################################
# Configuration Register [63]

record(longin, "$(device):alive") {
# field(ASG, "Reserved")
  field(DESC, "EVG alive")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evg_conf_alive_intr $(PORT)")
  field(FLNK, "$(device):statdevcalc")
}

record(longin, "$(device):rfdivRAW") {
# field(ASG, "Reserved")
  field(DESC, "EVG RF divider status RAW")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evg_conf_rfdivRAW_intr $(PORT)")
  field(FLNK, "$(device):rfdivRBV")
}

record(calc, "$(device):rfdivRBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG RF divider status RBV")
  field(INPA, "$(device):rfdivRAW")
  field(CALC, "A+1")
}

record(mbbi, "$(device):funselRBV") {
# field(ASG, "Reserved")
  field(DESC, "EVG function select status")
  field(NOBT, "6")
  field(ZRVL, "16")
  field(ZRST, "FOUT")
  field(ONVL, "17")
  field(ONST, "EVR")
  field(TWVL, "18")
  field(TWST, "EVG")
  field(THVL, "32")
  field(THST, "EVE")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evg_conf_funsel_intr $(PORT)")
}

record(mbbo, "$(device):funsel") {
  field(DESC, "STD-EVO configuration as EVG")
  field(ZRVL, "16")
  field(ZRST, "FOUT")
  field(ONVL, "17")
  field(ONST, "EVR")
  field(TWVL, "18")
  field(TWST, "EVG")
  field(THVL, "32")
  field(THST, "EVE")
  field(VAL, "2")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evg_conf_funsel_set($(device)) $(PORT)")
}

record(ao, "$(device):rfdiv"){
  field(DESC, "EVG RF clock divider")
  field(DTYP, "stream")
  field(DRVH, "15")
  field(DRVL, "1")
  field(AOFF, "1")
  field(PREC, "0")
  field(OUT, "@timing.proto evg_conf_rfdiv_set($(device)) $(PORT)")
}

record(longout, "$(device):cmd_evg_conf_get") {
# field(ASG, "Reserved")
  field(DESC, "Configuration reg read command code")
  field(VAL, "0xBF")
  field(SCAN, "1 second")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evg_conf_get($(device)) $(PORT)")
}

record(longout, "$(device):cmd_evg_conf_set") {
# field(ASG, "Reserved")
  field(DESC, "Configuration reg write command code")
  field(VAL, "0x7F")
}

########################################################################
# Injection Table

record(waveform, "$(device):ITBL") {
  field(DESC, "Injection table")
  field(NELM, "$(ITBL_LEN)")
  field(FTVL, "USHORT")
}

########################################################################
# Write all configuration registers
record(bo, "$(device):download") {
  field(DESC, "EVG download")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
}

record(bo, "$(device):downloadT") {
  field(DESC, "EVG download trigger")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evg_download($(device)) $(PORT)")
}

record(bo, "$(device):uploadT") {
  field(DESC, "EVG upload trigger")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evg_upload($(device)) $(PORT)")
}

record(calc, "$(device):statdevcalc") {
# field(ASG, "Reserved")
  field(DESC, "EVG device status calc")
  field(INPA, "$(device):alive")
  field(CALC, "A=0?0:1")
  #field(ASG, "Reserved")
  field(FLNK, "$(device):statdev")
}

record(bi, "$(device):statdev") {
# field(ASG, "Reserved")
  field(DESC, "EVG device status")
  field(ZNAM, "WAITING")
  field(ONAM, "RUNNING")
  field(INP, "$(device):statdevcalc")
}

record(bi, "$(device):network") {
# field(ASG, "Reserved")
  field(DESC, "EVG network status")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
}

