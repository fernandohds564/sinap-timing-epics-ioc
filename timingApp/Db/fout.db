########################################################################
# Control and Status Register [0]

record(mbbiDirect, "$(P)$(R)foutenRAW"){
  field(DESC, "Enable/Disable FANOUT RAW")
  field(NOBT, "1")
  field(DTYP, "stream")
  field(SCAN, "I/O Intr")
  field(INP, "@timing.proto fout_ctrl_en_intr $(PORT)")
  field(FLNK, "$(P)$(R)foutenRBV")
}

record(bi, "$(P)$(R)foutenRBV"){
  field(DESC, "Enable/Disable FANOUT RBV")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(INP, "$(P)$(R)foutenRAW.B0")
}

record(mbbiDirect, "$(P)$(R)linkRAW") {
  field(ASG, "Reserved")
  field(DESC, "Uplink status RAW")
  field(NOBT, "8")
  field(DTYP, "stream")
  field(SCAN, "I/O Intr")
  field(INP, "@timing.proto fout_ctrl_link_intr $(PORT)")
  field(FLNK, "$(P)$(R)link")
}

record(bi, "$(P)$(R)link") {
  field(ASG, "Reserved")
  field(DESC, "Uplink status")
  field(ZNAM, "UNLINK")
  field(ONAM, "LINK")
  field(INP, "$(P)$(R)linkRAW.B7")
}

record(mbbiDirect, "$(P)$(R)LOSRAW") {
  field(ASG, "Reserved")
  field(DESC, "Downlink status in OUT0-OUT7 RAW")
  field(NOBT, "8")
  field(DTYP, "stream")
  field(SCAN, "I/O Intr")
  field(INP, "@timing.proto fout_ctrl_los_intr $(PORT)")
  field(FLNK, "$(P)$(R)los0RBV")
}

record(bi, "$(P)$(R)los0RBV"){
  field(ASG, "Reserved")
  field(DESC, "OUT0 downlink status RBV")
  field(ZNAM, "LINK")
  field(ONAM, "LOSS")
  field(INP, "$(P)$(R)LOSRAW.B0")
  field(FLNK, "$(P)$(R)los1RBV")
}

record(bi, "$(P)$(R)los1RBV"){
  field(ASG, "Reserved")
  field(DESC, "OUT1 downlink status RBV")
  field(ZNAM, "LINK")
  field(ONAM, "LOSS")
  field(INP, "$(P)$(R)LOSRAW.B1")
  field(FLNK, "$(P)$(R)los2RBV")
}

record(bi, "$(P)$(R)los2RBV"){
  field(ASG, "Reserved")
  field(DESC, "OUT2 downlink status RBV")
  field(ZNAM, "LINK")
  field(ONAM, "LOSS")
  field(INP, "$(P)$(R)LOSRAW.B2")
  field(FLNK, "$(P)$(R)los3RBV")
}

record(bi, "$(P)$(R)los3RBV"){
  field(ASG, "Reserved")
  field(DESC, "OUT3 downlink status RBV")
  field(ZNAM, "LINK")
  field(ONAM, "LOSS")
  field(INP, "$(P)$(R)LOSRAW.B3")
  field(FLNK, "$(P)$(R)los4RBV")
}

record(bi, "$(P)$(R)los4RBV"){
  field(ASG, "Reserved")
  field(DESC, "OUT4 downlink status RBV")
  field(ZNAM, "LINK")
  field(ONAM, "LOSS")
  field(INP, "$(P)$(R)LOSRAW.B4")
  field(FLNK, "$(P)$(R)los5RBV")
}

record(bi, "$(P)$(R)los5RBV"){
  field(ASG, "Reserved")
  field(DESC, "OUT5 downlink status RBV")
  field(ZNAM, "LINK")
  field(ONAM, "LOSS")
  field(INP, "$(P)$(R)LOSRAW.B5")
  field(FLNK, "$(P)$(R)los6RBV")
}

record(bi, "$(P)$(R)los6RBV"){
  field(ASG, "Reserved")
  field(DESC, "OUT6 downlink status RBV")
  field(ZNAM, "LINK")
  field(ONAM, "LOSS")
  field(INP, "$(P)$(R)LOSRAW.B6")
  field(FLNK, "$(P)$(R)los7RBV")
}

record(bi, "$(P)$(R)los7RBV"){
  field(ASG, "Reserved")
  field(DESC, "OUT7 downlink status RBV")
  field(ZNAM, "LINK")
  field(ONAM, "LOSS")
  field(INP, "$(P)$(R)LOSRAW.B7")
}

record(bo, "$(P)$(R)fouten"){
  field(DESC, "Enable/Disable FANOUT")
  field(DTYP, "stream")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(OUT, "@timing.proto fout_ctrl_set($(P),$(R)) $(PORT)")
}

record(longout, "$(P)$(R)cmd_ctrl_get") {
  field(ASG, "Reserved")
  field(DESC, "Control Status reg read command code")
  field(VAL, "0x80") # (0x80 | reg number)
  field(SCAN, "1 second")
  field(DTYP, "stream")
  field(OUT, "@timing.proto fout_ctrl_get($(P),$(R)) $(PORT)")
}

record(longout, "$(P)$(R)cmd_ctrl_set") {
  field(ASG, "Reserved")
  field(DESC, "Control Status reg write command code")
  field(VAL, "0x40")
}

########################################################################
# Firmware Version [62]

record(longin, "$(P)$(R)FRMVERSIONA"){
  #field(ASG, "Reserved")
  field(DESC, "EVO firmware version")
  field(DTYP, "stream")
  field(INP, "@timing.proto frmvrs_get($(P),$(R)) $(PORT)")
}

record(longin, "$(P)$(R)FRMVERSIONB"){
  #field(ASG, "Reserved")
  field(DESC, "EVO firmware version")
  field(DTYP, "stream")
  field(INP, "@timing.proto frmvrs_get($(P),$(R)) $(PORT)")
}

record(longin, "$(P)$(R)FRMVERSIONC"){
  #field(ASG, "Reserved")
  field(DESC, "EVO firmware version")
  field(DTYP, "stream")
  field(INP, "@timing.proto frmvrs_get($(P),$(R)) $(PORT)")
}

record(calcout, "$(P)$(R)cmd_frmvrs_get"){
  field(ASG, "Reserved")
  field(DESC, "Firmware version read command code")
  field(VAL, "0xBE")
}

########################################################################
# Configuration Register [63]

record(longin, "$(P)$(R)alive") {
  field(ASG, "Reserved")
  field(DESC, "FOUT alive")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto fout_conf_alive_intr $(PORT)")
  field(FLNK, "$(P)$(R)statdevcalc")
}

record(mbbi, "$(P)$(R)funselRBV") {
#  field(ASG, "Reserved")
  field(DESC, "STD-EVO function select status")
  field(NOBT, "6")
  field(ZRVL, "16")
  field(ZRST, "FOUT")
  field(ONVL, "17")
  field(ONST, "EVR")
  field(TWVL, "18")
  field(TWST, "EVG")
  field(THVL, "32")
  field(THST, "EVE")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto fout_conf_funsel_intr $(PORT)")
}

record(mbbo, "$(P)$(R)funsel") {
  field(DESC, "STD-EVO configuration")
  field(ZRVL, "16")
  field(ZRST, "FOUT")
  field(ONVL, "17")
  field(ONST, "EVR")
  field(TWVL, "18")
  field(TWST, "EVG")
  field(THVL, "32")
  field(THST, "EVE")
  field(VAL, "0")
  field(DTYP, "stream")
  field(OUT, "@timing.proto fout_conf_set($(P),$(R)) $(PORT)")
}

record(longout, "$(P)$(R)cmd_conf_get") {
  field(ASG, "Reserved")
  field(DESC, "Configuration reg read command code")
  field(VAL, "0xBF")
  field(SCAN, "1 second")
  field(DTYP, "stream")
  field(OUT, "@timing.proto fout_conf_get($(P),$(R)) $(PORT)")
}

record(longout, "$(P)$(R)cmd_conf_set") {
  field(ASG, "Reserved")
  field(DESC, "Configuration reg write command code")
  field(VAL, "0x7F")
}

########################################################################
# Write all configuration registers

record(bo, "$(P)$(R)download") {
  field(DESC, "FOUT download")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
}

record(bo, "$(P)$(R)downloadT") {
  field(DESC, "FOUT download trigger")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(DTYP, "stream")
  field(OUT, "@timing.proto fout_download($(P),$(R)) $(PORT)")
}

record(calc, "$(P)$(R)statdevcalc") {
  field(ASG, "Reserved")
  field(DESC, "FOUT device status calc")
  field(INPA, "$(P)$(R)alive")
  field(CALC, "A=0?0:1")
  field(FLNK, "$(P)$(R)statdev")
}

record(bi, "$(P)$(R)statdev") {
  field(ASG, "Reserved")
  field(DESC, "FOUT device status")
  field(ZNAM, "WAITING")
  field(ONAM, "RUNNING")
  field(INP, "$(P)$(R)statdevcalc")
}

record(bi, "$(P)$(R)network") {
  field(ASG, "Reserved")
  field(DESC, "FOUT network status")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
}

record(bo, "$(P)$(R)SAVE"){
  field(DESC, "FOUT manual save settings command")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(FLNK, "$(P)$(R)save_T")
}

record(calc, "$(P)$(R)save_T"){
  field(DESC, "FOUT manual save trigger")
  field(INPA, "$(P)$(R)SAVE.VAL")
  field(CALC, "(A > 0) ? (VAL+1) : VAL")
  field(VAL, "0")
}
